@page
@model InvestmentTracker.Pages.Expenses.BudgetsModel
@using System.Text.Json
@using InvestmentTracker.Models
@{
    var currentDate = new DateTime(Model.ViewModel.Year, Model.ViewModel.Month, 1);
    ViewData["Title"] = $"Manage Budgets - {currentDate.ToString("MMMM yyyy")}";
}

<h2>Manage Budgets - @currentDate.ToString("MMMM yyyy")</h2>

<form method="get" class="mb-4">
    <div class="row g-3 align-items-end">
        <div class="col-auto">
            <label for="year" class="form-label">Year</label>
            <select name="year" id="year" class="form-select">
                @for (int y = DateTime.Today.Year - 5; y <= DateTime.Today.Year + 1; y++)
                {
                    <option value="@y" selected="@(Model.ViewModel.Year == y)">@y</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <label for="month" class="form-label">Month</label>
            <select name="month" id="month" class="form-select">
                @for (int m = 1; m <= 12; m++)
                {
                    <option value="@m" selected="@(Model.ViewModel.Month == m)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">View</button>
        </div>
        <div class="col-auto">
            <a href="./Index?year=@Model.ViewModel.Year&month=@Model.ViewModel.Month" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Expenses
            </a>
        </div>
    </div>
</form>

<div class="card">
    <div class="card-header">
        <h5 class="mb-0">Category Budgets</h5>
    </div>
    <div class="card-body">
        @if (Model.ViewModel.Budgets.Any())
        {
            <div class="table-responsive">
                <table class="table align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Category</th>
                            <th class="text-end">Current Budget</th>
                            <th class="text-end">Spent</th>
                            <th style="width:40%">Progress</th>
                            <th>Status</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                    @foreach (var b in Model.ViewModel.Budgets.OrderBy(x => x.CategoryName))
                    {
                        var percent = b.BudgetAmount.HasValue && b.BudgetAmount > 0 ? Math.Min(100, Math.Round(b.Percent)) : 0;
                        var barClass = b.Status == "Over" ? "bg-danger" : b.Status == "Near" ? "bg-warning" : "bg-primary";
                        <tr>
                            <td>@b.CategoryName</td>
                            <td class="text-end">
                                @if (b.BudgetAmount.HasValue)
                                {
                                    @b.BudgetAmount.Value.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))
                                }
                                else
                                {
                                    <span class="text-muted">No budget</span>
                                }
                            </td>
                            <td class="text-end">@b.SpentAmount.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))</td>
                            <td>
                                @if (b.BudgetAmount.HasValue)
                                {
                                    <div class="progress" role="progressbar" aria-label=$"Spent {b.SpentAmount} of {b.BudgetAmount} ({percent}%)">
                                        <div class="progress-bar @barClass" style="width:@percent%">
                                            <span class="ms-2">@percent%</span>
                                        </div>
                                    </div>
                                    <small class="text-muted">
                                        @if (b.Percent >= 100)
                                        {
                                            <text>Over by @((b.SpentAmount - (b.BudgetAmount ?? 0)).ToString("C", new System.Globalization.CultureInfo("cs-CZ")))</text>
                                        }
                                        else
                                        {
                                            <text>Remaining @(((b.BudgetAmount ?? 0) - b.SpentAmount).ToString("C", new System.Globalization.CultureInfo("cs-CZ")))</text>
                                        }
                                    </small>
                                }
                                else
                                {
                                    <small class="text-muted">â€”</small>
                                }
                            </td>
                            <td>
                                <span class="badge @(b.Status == "Over" ? "bg-danger" : b.Status == "Near" ? "bg-warning text-dark" : b.Status == "Under" ? "bg-primary" : "bg-secondary")">@b.Status</span>
                            </td>
                            <td class="text-end">
                                <form method="post" asp-page-handler="SetBudget" class="d-inline-flex align-items-center gap-2">
                                    <input type="hidden" name="categoryId" value="@b.CategoryId" />
                                    <input type="hidden" name="year" value="@Model.ViewModel.Year" />
                                    <input type="hidden" name="month" value="@Model.ViewModel.Month" />
                                    <div class="input-group input-group-sm" style="width: 180px;">
                                        <span class="input-group-text">Budget</span>
                                        <input name="amount" type="number" step="0.01" class="form-control" value="@(b.BudgetAmount ?? 0)" placeholder="Amount"/>
                                    </div>
                                    <div class="btn-group btn-group-sm" role="group" aria-label="Scope">
                                        <input type="radio" class="btn-check" name="scope" id="scope-future-@b.CategoryId" value="future" checked>
                                        <label class="btn btn-outline-secondary" for="scope-future-@b.CategoryId" title="This and future months">Future</label>
                                        <input type="radio" class="btn-check" name="scope-month-@b.CategoryId" value="month">
                                        <label class="btn btn-outline-secondary" for="scope-month-@b.CategoryId" title="This month only">Month</label>
                                    </div>
                                    <button type="submit" class="btn btn-sm btn-primary" title="Save" aria-label="Save">
                                        <i class="bi bi-save"></i>
                                        <span class="d-none d-sm-inline ms-1">Save</span>
                                    </button>
                                </form>
                                @if (b.BudgetAmount.HasValue)
                                {
                                    <form method="post" asp-page-handler="DeleteBudget" class="d-inline ms-2">
                                        <input type="hidden" name="categoryId" value="@b.CategoryId" />
                                        <input type="hidden" name="year" value="@Model.ViewModel.Year" />
                                        <input type="hidden" name="month" value="@Model.ViewModel.Month" />
                                        <button type="submit" class="btn btn-sm btn-outline-danger" title="Delete Budget" aria-label="Delete Budget" onclick="return confirm('Delete this budget?')">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center text-muted">No categories found.</div>
        }
    </div>
    <div class="card-footer text-muted small">
        Near threshold at 80%. Over at 100%. Leftover does not carry over.
        <br>
        <strong>Scope:</strong> "Future" applies to this month and all future months. "Month" applies only to this month.
    </div>
</div>

@section Scripts {
    <script>
        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            const tooltipList = tooltipTriggerList.map(function(tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
