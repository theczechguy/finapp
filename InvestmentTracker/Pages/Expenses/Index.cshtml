@page
@model InvestmentTracker.Pages.Expenses.IndexModel
@using System.Text.Json
@using InvestmentTracker.Models
@{
    ViewData["Title"] = "Monthly Expenses";
}

<h2>Monthly Expense Overview</h2>

<form method="get" class="mb-4">
    <div class="row g-3 align-items-end">
        <div class="col-auto">
            <label for="year" class="form-label">Year</label>
            <select name="year" id="year" class="form-select">
                @for (int y = DateTime.Today.Year - 5; y <= DateTime.Today.Year + 1; y++)
                {
                    <option value="@y" selected="@(Model.ViewModel.Year == y)">@y</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <label for="month" class="form-label">Month</label>
            <select name="month" id="month" class="form-select">
                @for (int m = 1; m <= 12; m++)
                {
                    <option value="@m" selected="@(Model.ViewModel.Month == m)">@System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m)</option>
                }
            </select>
        </div>
        <div class="col-auto">
            <button type="submit" class="btn btn-primary">View</button>
        </div>
    </div>
</form>

<div class="row mb-4">
    <div class="col-md-4">
        <div class="card text-white bg-success">
            <div class="card-body">
                <h5 class="card-title">Total Income</h5>
                <p class="card-text fs-4">@Model.ViewModel.TotalIncome.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white bg-danger">
            <div class="card-body">
                <h5 class="card-title">Total Expenses</h5>
                <p class="card-text fs-4">@Model.ViewModel.TotalExpenses.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))</p>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="card text-white @(Model.ViewModel.NetBalance >= 0 ? "bg-primary" : "bg-warning")">
            <div class="card-body">
                <h5 class="card-title">Net Balance</h5>
                <p class="card-text fs-4">@Model.ViewModel.NetBalance.ToString("C", new System.Globalization.CultureInfo("cs-CZ"))</p>
            </div>
        </div>
    </div>
</div>

<div class="row mt-4">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                Incomes
                <a asp-page="./IncomeSources" class="btn btn-sm btn-outline-primary">Manage Sources</a>
            </div>
            <div class="card-body">
                <table class="table mb-0">
                    <thead>
                        <tr>
                            <th>Source</th>
                            <th>Expected</th>
                            <th>Actual</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var income in Model.ViewModel.Incomes)
                        {
                            <tr>
                                <form method="post" asp-page-handler="UpdateIncome">
                                    <td>@income.Name</td>
                                    <td>@income.ExpectedAmount.ToString("C", new System.Globalization.CultureInfo(income.Currency.ToCultureCode()))</td>
                                    <td>
                                        <input type="text" name="actualAmount" value="@income.ActualAmount" class="form-control" />
                                        <input type="hidden" name="incomeSourceId" value="@income.IncomeSourceId" />
                                        <input type="hidden" name="year" value="@Model.ViewModel.Year" />
                                        <input type="hidden" name="month" value="@Model.ViewModel.Month" />
                                    </td>
                                    <td>
                                        <button type="submit" class="btn btn-sm btn-primary">Update</button>
                                    </td>
                                </form>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                Regular Expenses
                <div>
                    <a asp-page="./ExpenseCategories" class="btn btn-sm btn-outline-secondary me-2">Manage Categories</a>
                    <button type="button" class="btn btn-sm btn-outline-primary" data-bs-toggle="modal" data-bs-target="#addRegularExpenseModal">Add Expense</button>
                </div>
            </div>
            <div class="card-body">
                <table class="table mb-0">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Category</th>
                            <th>Amount</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var expense in Model.ViewModel.RegularExpenses)
                        {
                            <tr>
                                <td>@expense.Name</td>
                                <td>@(expense.Category?.Name ?? "Uncategorized")</td>
                                <td>@expense.Amount.ToString("C", new System.Globalization.CultureInfo(expense.Currency.ToCultureCode()))</td>
                                <td>
                                    <button type="button" class="btn btn-sm btn-secondary" onclick="editRegularExpense(@expense.Id)">Edit</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                Expense Breakdown
            </div>
            <div class="card-body">
                <canvas id="expenseChart"></canvas>
            </div>
        </div>
    </div>
</div>

<!-- Add Regular Expense Modal -->
<div class="modal fade" id="addRegularExpenseModal" tabindex="-1" aria-labelledby="addRegularExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addRegularExpenseModalLabel">Add Regular Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="AddRegularExpense">
                    <div class="mb-3">
                        <label for="regularExpenseName" class="form-label">Name</label>
                        <input type="text" id="regularExpenseName" name="name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="regularExpenseAmount" class="form-label">Amount</label>
                        <input type="number" id="regularExpenseAmount" name="amount" step="0.01" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="regularExpenseCategory" class="form-label">Category</label>
                        <select id="regularExpenseCategory" name="categoryId" class="form-control" required>
                            <option value="">Select Category</option>
                            @foreach (var category in await Model.GetExpenseCategoriesAsync())
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="regularExpenseCurrency" class="form-label">Currency</label>
                        <select id="regularExpenseCurrency" name="currency" class="form-control" required>
                            <option value="CZK" selected>CZK</option>
                            <option value="EUR">EUR</option>
                            <option value="USD">USD</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="regularExpenseFrequency" class="form-label">Frequency</label>
                        <select id="regularExpenseFrequency" name="frequency" class="form-control" required>
                            <option value="Monthly">Monthly</option>
                            <option value="Quarterly">Quarterly</option>
                            <option value="SemiAnnually">Semi-Annually</option>
                            <option value="Annually">Annually</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="regularExpenseStartDate" class="form-label">Start Date</label>
                        <input type="date" id="regularExpenseStartDate" name="startDate" class="form-control" required />
                    </div>
                    <button type="submit" class="btn btn-primary">Add Expense</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Add Irregular Expense Modal -->
<div class="modal fade" id="addIrregularExpenseModal" tabindex="-1" aria-labelledby="addIrregularExpenseModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addIrregularExpenseModalLabel">Quick Add Irregular Expense</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" asp-page-handler="AddIrregularExpense">
                    <div class="mb-3">
                        <label for="irregularExpenseName" class="form-label">Name</label>
                        <input type="text" id="irregularExpenseName" name="name" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="irregularExpenseAmount" class="form-label">Amount</label>
                        <input type="number" id="irregularExpenseAmount" name="amount" step="0.01" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="irregularExpenseCategory" class="form-label">Category</label>
                        <select id="irregularExpenseCategory" name="categoryId" class="form-control" required>
                            <option value="">Select Category</option>
                            @foreach (var category in await Model.GetExpenseCategoriesAsync())
                            {
                                <option value="@category.Id">@category.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="irregularExpenseCurrency" class="form-label">Currency</label>
                        <select id="irregularExpenseCurrency" name="currency" class="form-control" required>
                            <option value="CZK" selected>CZK</option>
                            <option value="EUR">EUR</option>
                            <option value="USD">USD</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="irregularExpenseDate" class="form-label">Date</label>
                        <input type="date" id="irregularExpenseDate" name="date" class="form-control" required value="@DateTime.Today.ToString("yyyy-MM-dd")" />
                    </div>
                    <button type="submit" class="btn btn-primary">Add Expense</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const ctx = document.getElementById('expenseChart').getContext('2d');
            const expenseData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.ViewModel.ExpensesByCategory));

            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: Object.keys(expenseData),
                    datasets: [{
                        data: Object.values(expenseData),
                        backgroundColor: [
                            '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF',
                            '#FF9F40', '#C9CBCF', '#E7E9ED', '#77DD77', '#FDFD96'
                        ]
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'right',
                        }
                    }
                }
            });
        });

        function editRegularExpense(expenseId) {
            // TODO: Implement edit functionality
            alert('Edit functionality for regular expense ' + expenseId + ' will be implemented next');
        }

        function deleteIrregularExpense(expenseId) {
            if (confirm('Are you sure you want to delete this expense?')) {
                // Create a form and submit it
                const form = document.createElement('form');
                form.method = 'post';
                form.action = '?handler=DeleteIrregularExpense';

                const expenseIdInput = document.createElement('input');
                expenseIdInput.type = 'hidden';
                expenseIdInput.name = 'expenseId';
                expenseIdInput.value = expenseId;
                form.appendChild(expenseIdInput);

                // Add year and month to maintain current view
                const yearInput = document.createElement('input');
                yearInput.type = 'hidden';
                yearInput.name = 'year';
                yearInput.value = '@Model.ViewModel.Year';
                form.appendChild(yearInput);

                const monthInput = document.createElement('input');
                monthInput.type = 'hidden';
                monthInput.name = 'month';
                monthInput.value = '@Model.ViewModel.Month';
                form.appendChild(monthInput);

                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
