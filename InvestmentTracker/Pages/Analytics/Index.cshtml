@page
@model InvestmentTracker.Pages.Analytics.IndexModel
@using System.Text.Json
@using System.Globalization
@{
    ViewData["Title"] = "Expense Analytics";
    var czCulture = new CultureInfo("cs-CZ");
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h1 class="mb-4">
                <i class="bi bi-bar-chart-line me-2"></i>
                Expense Analytics Dashboard
            </h1>

            <div class="alert alert-info" role="alert">
                <i class="bi bi-info-circle me-2"></i>
                <strong>Analytics Overview</strong> 
                Total Expenses: <strong>@Model.TotalExpenses.ToString("C", czCulture)</strong> | 
                Categories: <strong>@Model.CategoryExpenses.Count</strong> | 
                Data Points: <strong>@Model.TotalTransactions</strong>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Date Range</h5>
                        </div>
                        <div class="card-body">
                            <p class="text-muted">Date picker will go here</p>
                        </div>
                    </div>
                </div>

                <div class="col-md-8">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Category Breakdown</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.CategoryExpenses.Any())
                            {
                                <div class="text-center">
                                    <canvas id="categoryChart" width="400" height="300"></canvas>
                                </div>
                            }
                            else
                            {
                                <div class="text-center text-muted">
                                    <i class="bi bi-pie-chart" style="font-size: 3rem;"></i>
                                    <p class="mt-2">No expense data available for the selected period</p>
                                    <small>Add some expenses to see the category breakdown</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">Monthly Spending Trends</h5>
                        </div>
                        <div class="card-body">
                            @if (Model.MonthlyExpenses.Any())
                            {
                                <div class="text-center">
                                    <canvas id="trendsChart" width="800" height="300"></canvas>
                                </div>
                            }
                            else
                            {
                                <div class="text-center text-muted">
                                    <i class="bi bi-bar-chart-line" style="font-size: 3rem;"></i>
                                    <p class="mt-2">No monthly expense data available</p>
                                    <small>Add some expenses to see spending trends over time</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-12">
                    <h2 class="mb-3">
                        <i class="bi bi-graph-up-arrow me-2"></i>
                        Month-over-Month Comparison
                    </h2>
                </div>
            </div>

            <div class="row mb-4">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-calendar-event me-2"></i>
                                @Model.MonthlyComparison.CurrentMonth vs @Model.MonthlyComparison.PreviousMonth
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-6">
                                    <div class="text-center">
                                        <h4 class="text-primary">@Model.MonthlyComparison.CurrentTotal.ToString("C", czCulture)</h4>
                                        <small class="text-muted">@Model.MonthlyComparison.CurrentMonth</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="text-center">
                                        <h4 class="text-secondary">@Model.MonthlyComparison.PreviousTotal.ToString("C", czCulture)</h4>
                                        <small class="text-muted">@Model.MonthlyComparison.PreviousMonth</small>
                                    </div>
                                </div>
                            </div>
                            <hr>
                            <div class="text-center">
                                @if (Model.MonthlyComparison.Trend == "up")
                                {
                                    <span class="badge bg-danger fs-6">
                                        <i class="bi bi-arrow-up-circle me-1"></i>
                                        +@Model.MonthlyComparison.ChangeAmount.ToString("C", czCulture) 
                                        (+@Model.MonthlyComparison.ChangePercent.ToString("N1")%)
                                    </span>
                                }
                                else if (Model.MonthlyComparison.Trend == "down")
                                {
                                    <span class="badge bg-success fs-6">
                                        <i class="bi bi-arrow-down-circle me-1"></i>
                                        @Model.MonthlyComparison.ChangeAmount.ToString("C", czCulture) 
                                        (@Model.MonthlyComparison.ChangePercent.ToString("N1")%)
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary fs-6">
                                        <i class="bi bi-dash-circle me-1"></i>
                                        No Change
                                    </span>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-bar-chart-line me-2"></i>
                                Category Changes
                            </h5>
                        </div>
                        <div class="card-body">
                            @if (Model.MonthlyComparison.CategoryComparisons.Any())
                            {
                                <div class="table-responsive">
                                    <table class="table table-sm">
                                        <thead>
                                            <tr>
                                                <th>Category</th>
                                                <th class="text-end">Change</th>
                                                <th class="text-center">Trend</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var category in Model.MonthlyComparison.CategoryComparisons.Take(5))
                                            {
                                                <tr>
                                                    <td>
                                                        <span class="badge" style="background-color: @category.Color; color: white;">
                                                            @category.Category
                                                        </span>
                                                    </td>
                                                    <td class="text-end">
                                                        @if (category.Trend == "up")
                                                        {
                                                            <span class="text-danger">
                                                                +@category.ChangeAmount.ToString("C", czCulture)
                                                            </span>
                                                        }
                                                        else if (category.Trend == "down")
                                                        {
                                                            <span class="text-success">
                                                                @category.ChangeAmount.ToString("C", czCulture)
                                                            </span>
                                                        }
                                                        else
                                                        {
                                                            <span class="text-muted">
                                                                @category.ChangeAmount.ToString("C", czCulture)
                                                            </span>
                                                        }
                                                    </td>
                                                    <td class="text-center">
                                                        @if (category.Trend == "up")
                                                        {
                                                            <i class="bi bi-arrow-up-circle text-danger"></i>
                                                        }
                                                        else if (category.Trend == "down")
                                                        {
                                                            <i class="bi bi-arrow-down-circle text-success"></i>
                                                        }
                                                        else
                                                        {
                                                            <i class="bi bi-dash-circle text-muted"></i>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                            else
                            {
                                <div class="text-center text-muted">
                                    <i class="bi bi-info-circle" style="font-size: 2rem;"></i>
                                    <p class="mt-2">No category data available for comparison</p>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <div class="row mt-4">
                <div class="col-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-bar-chart-steps me-2"></i>
                                Category Comparison: @Model.MonthlyComparison.CurrentMonth vs @Model.MonthlyComparison.PreviousMonth
                            </h5>
                        </div>
                        <div class="card-body">
                            @if (Model.MonthlyComparison.CategoryComparisons.Any())
                            {
                                <canvas id="categoryComparisonChart" width="800" height="400"></canvas>
                            }
                            else
                            {
                                <div class="text-center text-muted">
                                    <i class="bi bi-bar-chart" style="font-size: 3rem;"></i>
                                    <p class="mt-2">No category comparison data available</p>
                                    <small>Add expenses in both months to see comparisons</small>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Category breakdown donut chart
            const categoryData = @Html.Raw(Json.Serialize(Model.CategoryExpenses));
            if (categoryData.length > 0) {
                const categoryCtx = document.getElementById('categoryChart').getContext('2d');
                new Chart(categoryCtx, {
                    type: 'doughnut',
                    data: {
                        labels: categoryData.map(item => item.category),
                        datasets: [{
                            data: categoryData.map(item => item.amount),
                            backgroundColor: categoryData.map(item => item.color),
                            borderWidth: 2
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return context.label + ': ' + new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(context.parsed);
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Monthly trends bar chart
            const monthlyData = @Html.Raw(Json.Serialize(Model.MonthlyExpenses));
            if (monthlyData.length > 0) {
                const trendsCtx = document.getElementById('trendsChart').getContext('2d');
                new Chart(trendsCtx, {
                    type: 'bar',
                    data: {
                        labels: monthlyData.map(item => item.month),
                        datasets: [{
                            label: 'Monthly Expenses',
                            data: monthlyData.map(item => item.amount),
                            backgroundColor: monthlyData.map((item, index) => {
                                if (index === monthlyData.length - 1) return '#FF6384'; // Current month
                                if (index === monthlyData.length - 2) return '#36A2EB'; // Previous month
                                return '#36A2EB';
                            }),
                            borderColor: '#36A2EB',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = 'Amount: ' + new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(context.parsed.y);
                                        if (context.dataIndex === monthlyData.length - 1) {
                                            label += ' (Current)';
                                        } else if (context.dataIndex === monthlyData.length - 2) {
                                            label += ' (Previous)';
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(value);
                                    }
                                }
                            }
                        }
                    }
                });
            }

            // Category comparison chart
            const comparisonData = @Html.Raw(Json.Serialize(Model.MonthlyComparison.CategoryComparisons));
            if (comparisonData.length > 0) {
                const comparisonCtx = document.getElementById('categoryComparisonChart').getContext('2d');
                new Chart(comparisonCtx, {
                    type: 'bar',
                    data: {
                        labels: comparisonData.map(item => item.category),
                        datasets: [
                            {
                                label: '@Model.MonthlyComparison.PreviousMonth',
                                data: comparisonData.map(item => item.previousMonth),
                                backgroundColor: 'rgba(54, 162, 235, 0.5)',
                                borderColor: 'rgba(54, 162, 235, 1)',
                                borderWidth: 1
                            },
                            {
                                label: '@Model.MonthlyComparison.CurrentMonth',
                                data: comparisonData.map(item => item.currentMonth),
                                backgroundColor: 'rgba(255, 99, 132, 0.5)',
                                borderColor: 'rgba(255, 99, 132, 1)',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        plugins: {
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        return context.dataset.label + ': ' + new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(context.parsed.y);
                                    }
                                }
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value) {
                                        return new Intl.NumberFormat('cs-CZ', { style: 'currency', currency: 'CZK' }).format(value);
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}