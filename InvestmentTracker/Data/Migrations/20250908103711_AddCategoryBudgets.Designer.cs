// <auto-generated />
using System;
using InvestmentTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InvestmentTracker.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908103711_AddCategoryBudgets")]
    partial class AddCategoryBudgets
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("InvestmentTracker.Models.CategoryBudget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EndMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EndYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId", "StartYear", "StartMonth");

                    b.ToTable("CategoryBudgets");
                });

            modelBuilder.Entity("InvestmentTracker.Models.ContributionSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("DayOfMonth")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId", "StartDate");

                    b.ToTable("ContributionSchedules");
                });

            modelBuilder.Entity("InvestmentTracker.Models.ExpenseCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ExpenseCategories");
                });

            modelBuilder.Entity("InvestmentTracker.Models.ExpenseSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("EndMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EndYear")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Frequency")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RegularExpenseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartMonth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StartYear")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RegularExpenseId", "StartYear", "StartMonth");

                    b.ToTable("ExpenseSchedules");
                });

            modelBuilder.Entity("InvestmentTracker.Models.FamilyMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Relationship")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FamilyMember");
                });

            modelBuilder.Entity("InvestmentTracker.Models.IncomeSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ExpectedAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("IncomeSources");
                });

            modelBuilder.Entity("InvestmentTracker.Models.Investment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Category")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ChargeAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Provider")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("InvestmentTracker.Models.InvestmentValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AsOf")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId", "AsOf")
                        .IsUnique();

                    b.ToTable("InvestmentValues");
                });

            modelBuilder.Entity("InvestmentTracker.Models.IrregularExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExpenseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FamilyMemberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("FamilyMemberId");

                    b.ToTable("IrregularExpenses");
                });

            modelBuilder.Entity("InvestmentTracker.Models.MonthlyIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("ActualAmount")
                        .HasColumnType("TEXT");

                    b.Property<int>("IncomeSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Month")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IncomeSourceId", "Month")
                        .IsUnique();

                    b.ToTable("MonthlyIncomes");
                });

            modelBuilder.Entity("InvestmentTracker.Models.OneTimeContribution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("InvestmentId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("InvestmentId", "Date");

                    b.ToTable("OneTimeContributions");
                });

            modelBuilder.Entity("InvestmentTracker.Models.OneTimeIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int?>("IncomeSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Date");

                    b.HasIndex("IncomeSourceId");

                    b.ToTable("OneTimeIncomes");
                });

            modelBuilder.Entity("InvestmentTracker.Models.RegularExpense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Currency")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ExpenseCategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ExpenseType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FamilyMemberId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseCategoryId");

                    b.HasIndex("FamilyMemberId");

                    b.ToTable("RegularExpenses");
                });

            modelBuilder.Entity("InvestmentTracker.Models.CategoryBudget", b =>
                {
                    b.HasOne("InvestmentTracker.Models.ExpenseCategory", "ExpenseCategory")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseCategory");
                });

            modelBuilder.Entity("InvestmentTracker.Models.ContributionSchedule", b =>
                {
                    b.HasOne("InvestmentTracker.Models.Investment", "Investment")
                        .WithMany("Schedules")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("InvestmentTracker.Models.ExpenseSchedule", b =>
                {
                    b.HasOne("InvestmentTracker.Models.RegularExpense", "RegularExpense")
                        .WithMany("Schedules")
                        .HasForeignKey("RegularExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RegularExpense");
                });

            modelBuilder.Entity("InvestmentTracker.Models.InvestmentValue", b =>
                {
                    b.HasOne("InvestmentTracker.Models.Investment", "Investment")
                        .WithMany("Values")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("InvestmentTracker.Models.IrregularExpense", b =>
                {
                    b.HasOne("InvestmentTracker.Models.ExpenseCategory", "Category")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId");

                    b.HasOne("InvestmentTracker.Models.FamilyMember", "FamilyMember")
                        .WithMany()
                        .HasForeignKey("FamilyMemberId");

                    b.Navigation("Category");

                    b.Navigation("FamilyMember");
                });

            modelBuilder.Entity("InvestmentTracker.Models.MonthlyIncome", b =>
                {
                    b.HasOne("InvestmentTracker.Models.IncomeSource", "IncomeSource")
                        .WithMany()
                        .HasForeignKey("IncomeSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IncomeSource");
                });

            modelBuilder.Entity("InvestmentTracker.Models.OneTimeContribution", b =>
                {
                    b.HasOne("InvestmentTracker.Models.Investment", "Investment")
                        .WithMany("OneTimeContributions")
                        .HasForeignKey("InvestmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("InvestmentTracker.Models.OneTimeIncome", b =>
                {
                    b.HasOne("InvestmentTracker.Models.IncomeSource", "IncomeSource")
                        .WithMany()
                        .HasForeignKey("IncomeSourceId");

                    b.Navigation("IncomeSource");
                });

            modelBuilder.Entity("InvestmentTracker.Models.RegularExpense", b =>
                {
                    b.HasOne("InvestmentTracker.Models.ExpenseCategory", "Category")
                        .WithMany()
                        .HasForeignKey("ExpenseCategoryId");

                    b.HasOne("InvestmentTracker.Models.FamilyMember", "FamilyMember")
                        .WithMany()
                        .HasForeignKey("FamilyMemberId");

                    b.Navigation("Category");

                    b.Navigation("FamilyMember");
                });

            modelBuilder.Entity("InvestmentTracker.Models.Investment", b =>
                {
                    b.Navigation("OneTimeContributions");

                    b.Navigation("Schedules");

                    b.Navigation("Values");
                });

            modelBuilder.Entity("InvestmentTracker.Models.RegularExpense", b =>
                {
                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
